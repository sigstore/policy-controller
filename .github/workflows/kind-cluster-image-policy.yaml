# Copyright 2022 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test policy-controller with ClusterImagePolicy

on:
  pull_request:
    branches: [ 'main', 'release-*' ]

defaults:
  run:
    shell: bash

permissions: read-all

jobs:
  cip-test:
    name: ClusterImagePolicy e2e tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Keep running if one leg fails.
      matrix:
        k8s-version:
        - v1.23.x
        - v1.24.x
        - v1.25.x

        script:
        - cluster_image_policy
        - cluster_image_policy_with_attestations
        - cluster_with_scalable
        - cluster_image_policy_with_warn
        - cluster_image_policy_with_source
        - cluster_image_policy_with_fetch_config_file
        - cluster_image_policy_with_include_spec
        - cluster_image_policy_with_include_objectmeta
        - cluster_image_policy_with_attestations_rego
        - cluster_image_policy_with_include_typemeta
        - cluster_image_policy_from_configmap_with_fetch_config_file
        - cluster_image_policy_from_url

    env:
      KO_DOCKER_REPO: "registry.local:5000/policy-controller"
      SCAFFOLDING_RELEASE_VERSION: "v0.5.4"
      GO111MODULE: on
      GOFLAGS: -ldflags=-s -ldflags=-w
      KOCACHE: ~/ko

    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
      with:
        go-version: '1.20'
        check-latest: true

    # will use the latest release available for ko
    - uses: imjasonh/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.6

    - uses: imranismail/setup-kustomize@a76db1c6419124d51470b1e388c4b29476f495f1 # v1.6.1

    - name: Install yq
      uses: mikefarah/yq@d2f1ae9db722ac6b0702dd7f8a08dd22722d8c2d # v4.33.3

    - name: Setup mirror
      uses: chainguard-dev/actions/setup-mirror@main
      with:
        mirror: mirror.gcr.io

    - uses: sigstore/cosign-installer@204a51a57a74d190b284a0ce69b44bc37201f343

    - name: Install cluster + sigstore
      uses: sigstore/scaffolding/actions/setup@main
      with:
        k8s-version: ${{ matrix.k8s-version}}
        version: ${{ env.SCAFFOLDING_RELEASE_VERSION }}

    - name: Copy TUF root to policy-controller namespace
      run: |
        kubectl create ns cosign-system
        kubectl -n tuf-system get secrets tuf-root -oyaml | sed 's/namespace: .*/namespace: cosign-system/' | kubectl create -f -
        echo "TUF_ROOT_FILE=./root.json" >> $GITHUB_ENV

    - name: Install policy-controller
      env:
        GIT_HASH: ${{ github.sha }}
        GIT_VERSION: ci
        LDFLAGS: ""
        POLICY_CONTROLLER_YAML: test/kustomize/policy-controller-e2e.yaml
        KO_PREFIX: registry.local:5000/policy-controller
        POLICY_CONTROLLER_ARCHS: linux/amd64
      run: |
        make ko-policy-controller
        kustomize build test/kustomize | kubectl apply -f -

        # Wait for the webhook to come up and become Ready
        kubectl rollout status --timeout 5m --namespace cosign-system deployments/webhook
        kubectl rollout status --timeout 5m --namespace cosign-system deployments/policy-webhook

        # And make sure everything is up.
        kubectl wait deployment -n cosign-system --for condition=Available=True --timeout=90s --all
        sleep 10

    - name: Run Cluster Image Policy Tests
      timeout-minutes: 15
      run: |
        ./test/e2e_test_${{ matrix.script }}.sh

    - name: Make sure validatingwebookconfiguration contains no status subresources
      run: |
        if kubectl get validatingwebhookconfigurations -oyaml policy.sigstore.dev | grep -q status; then
          echo Found status resources in the webhook configuration
          exit 1
        fi

    - name: Collect diagnostics
      if: ${{ failure() }}
      uses: chainguard-dev/actions/kind-diag@84c993eaf02da1c325854fb272a4df9184bd80fc # main
